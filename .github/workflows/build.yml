name: Build

on: [pull_request, push]


jobs:
  prepare_matrix:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.generate-matrix.outputs.versions }}
    steps:
    - name: Generate Node.js versions matrix
      id: generate-matrix
      run: |
        current_lts=$(curl -s https://nodejs.org/en/ | grep -E -o 'Download [0-9.]+ LTS' | grep -E -o '([0-9]+)' | head -n 1)
        previous_lts=$(( current_lts - 2 ))
        next_lts=$(( current_lts + 2 ))
        VERSIONS="[$previous_lts, $current_lts, $next_lts]"
        echo ::set-output name=versions::${VERSIONS}

  unit_test:
    needs:
    - prepare_matrix
    strategy:
      matrix:
        node-version: ${{ fromJSON(needs.prepare_matrix.outputs.versions) }}
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i -g npm
      name: Update NPM
    - run: npm install --no-package-lock
      name: Install dev dependencies
    - run: npm run lint
      name: Run linter
    - run: npm run test
      name: Run unit tests

  e2e_test:
    strategy:
      matrix:
        include:
        - xcodeVersion: 11.7
          deviceName: iPhone 11
        - xcodeVersion: 12.4
          deviceName: iPhone X
        - xcodeVersion: 13.2
          deviceName: iPhone X
    env:
      CI: true
      _FORCE_LOGS: 1
      DEVICE_NAME: ${{ matrix.deviceName }}
      XCODE_VERSION: ${{ matrix.xcodeVersion }}
    # https://github.com/actions/runner-images/tree/main/images/macos
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: lts/*
        check-latest: true
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: "${{ matrix.xcodeVersion }}"
    - run: npm install
      name: Install dev dependencies
    - run: npm run e2e-test
      name: Run e2e tests on Xcode@${{ matrix.xcodeVersion }}
